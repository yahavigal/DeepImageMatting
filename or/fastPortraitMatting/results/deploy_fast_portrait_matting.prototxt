name: "fast portrait matting"
input: "data"
input_dim: 1
input_dim: 4
input_dim: 120
input_dim: 160
layer {
  name: "conv_1"
  type: "Convolution"
  bottom: "data"
  top: "conv_1"
  convolution_param {
    num_output: 13
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool_1"
  type: "Pooling"
  bottom: "data"
  top: "pool_1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "concat_1"
  type: "Concat"
  bottom: "pool_1"
  bottom: "conv_1"
  top: "concat_1"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv_2"
  type: "Convolution"
  bottom: "concat_1"
  top: "conv_2"
  convolution_param {
    num_output: 16
    pad: 8
    kernel_size: 3
    dilation: 8
  }
}
layer {
  name: "relu_2"
  type: "ReLU"
  bottom: "conv_2"
  top: "conv_2"
  relu_param {
    negative_slope: 0.0
  }
}
layer {
  name: "concat_2"
  type: "Concat"
  bottom: "conv_2"
  bottom: "concat_1"
  top: "concat_2"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv_3"
  type: "Convolution"
  bottom: "concat_2"
  top: "conv_3"
  convolution_param {
    num_output: 16
    pad: 16
    kernel_size: 3
    dilation: 16
  }
}
layer {
  name: "relu_3"
  type: "ReLU"
  bottom: "conv_3"
  top: "conv_3"
  relu_param {
    negative_slope: 0.0
  }
}
layer {
  name: "concat_3"
  type: "Concat"
  bottom: "conv_3"
  bottom: "concat_2"
  top: "concat_3"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv_4"
  type: "Convolution"
  bottom: "concat_3"
  top: "conv_4"
  convolution_param {
    num_output: 16
    pad: 24
    kernel_size: 3
    dilation: 24
  }
}
layer {
  name: "relu_4"
  type: "ReLU"
  bottom: "conv_4"
  top: "conv_4"
  relu_param {
    negative_slope: 0.0
  }
}
layer {
  name: "concat_4"
  type: "Concat"
  bottom: "conv_4"
  bottom: "concat_3"
  top: "concat_4"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv_5"
  type: "Convolution"
  bottom: "concat_4"
  top: "conv_5"
  convolution_param {
    num_output: 16
    pad: 32
    kernel_size: 3
    dilation: 32
  }
}
layer {
  name: "relu_5"
  type: "ReLU"
  bottom: "conv_5"
  top: "conv_5"
  relu_param {
    negative_slope: 0.0
  }
}
layer {
  name: "concat_5"
  type: "Concat"
  bottom: "conv_2"
  bottom: "conv_3"
  bottom: "conv_4"
  bottom: "conv_5"
  top: "concat_5"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv_6"
  type: "Convolution"
  bottom: "concat_5"
  top: "conv_6"
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "upsampling"
  type: "Deconvolution"
  bottom: "conv_6"
  top: "upsampling_1"
  convolution_param {
    num_output: 2
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 2
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "slicer_1"
  type: "Slice"
  bottom: "upsampling_1"
  top: "background"
  top: "foreground"
  slice_param {
    slice_point: 1
    axis: 1
  }
}
layer {
  name: "data_squared"
  type: "Eltwise"
  bottom: "data"
  bottom: "data"
  top: "data_squared"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "concat_foreground"
  type: "Concat"
  bottom: "foreground"
  bottom: "foreground"
  bottom: "foreground"
  bottom: "foreground"
  top: "concat_foreground"
  concat_param {
    axis: 1
  }
}
layer {
  name: "data_squared"
  type: "Eltwise"
  bottom: "data"
  bottom: "concat_foreground"
  top: "data_fg"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "concat_feathering"
  type: "Concat"
  bottom: "data"
  bottom: "background"
  bottom: "foreground"
  bottom: "data_squared"
  bottom: "data_fg"
  top: "concat_feathering"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv_feathering_1"
  type: "Convolution"
  bottom: "concat_feathering"
  top: "conv_feathering_1"
  convolution_param {
    num_output: 8
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "bnorm_1"
  type: "BatchNorm"
  bottom: "conv_feathering_1"
  top: "bn_1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu_feathering_1"
  type: "ReLU"
  bottom: "bn_1"
  top: "bn_1"
  relu_param {
    negative_slope: 0.0
  }
}
layer {
  name: "conv_feathering_2"
  type: "Convolution"
  bottom: "bn_1"
  top: "conv_feathering_2"
  convolution_param {
    num_output: 3
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "slicer_2"
  type: "Slice"
  bottom: "conv_feathering_2"
  top: "a"
  top: "b"
  top: "c"
  slice_param {
    slice_point: 1
    slice_point: 2
    axis: 1
  }
}
layer {
  name: "a_mult_bg"
  type: "Eltwise"
  bottom: "a"
  bottom: "background"
  top: "a_mult_bg"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "b_mult_fg"
  type: "Eltwise"
  bottom: "b"
  bottom: "foreground"
  top: "b_mult_fg"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "guided_filter"
  type: "Eltwise"
  bottom: "a_mult_bg"
  bottom: "b_mult_fg"
  bottom: "c"
  top: "guided_filter"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "conv_upsample"
  type: "Deconvolution"
  bottom: "guided_filter"
  top: "conv_upsample"
  convolution_param {
    num_output: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    kernel_h: 4
    kernel_w: 4
    stride_h: 4
    stride_w: 4
  }
}
layer {
  name: "concat_upsample"
  type: "Concat"
  bottom: "data_fs"
  bottom: "conv_upsample"
  top: "concat_upsample"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv_7"
  type: "Convolution"
  bottom: "concat_upsample"
  top: "alpha_pred"
  convolution_param {
    num_output: 1
    pad: 3
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "sigmoid"
  type: "Sigmoid"
  bottom: "alpha_pred"
  top: "alpha_pred"
}
